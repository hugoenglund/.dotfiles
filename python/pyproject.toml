[tool.black]
  include = '\.pyi?$'
  line-length = 79
  preview = false
  target-version = ["py310", "py311"]

[tool.isort]
  extend_skip = [".dockerignore", ".gitignore", ".json", ".md"]
  line_length = 79
  profile = "black"
  py_version = 310

[tool.docformatter]
  blank = true
  recursive = true
  style = "numpy"
  wrap-descriptions = 79
  wrap-summaries = 79

[tool.pytest.ini_options]
  addopts = "--import-mode=importlib -ra -v -x"
  minversion = "7.0"
  testpaths = ["integration", "unit"]

[tool.pylint]
  disable = [
    "fixme",
    "import-error",
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
  ]
  max-line-length = 79

[tool.pydocstyle]
  inherit = false

  # conventions: http://www.pydocstyle.org/en/stable/error_codes.html#default-conventions
  convention = "numpy"

  # error codes: http://www.pydocstyle.org/en/stable/error_codes.html#error-codes
  add-ignore = [
    "D100", # Missing docstring in public module
    "D106", # Missing docstring in nested public class
  ]

[tool.mypy]
  check_untyped_defs = true
  disallow_untyped_calls = false
  disallow_untyped_defs = true
  follow_imports = "silent"
  hide_error_codes = false
  ignore_missing_imports = true
  plugins = ["pydantic.mypy"]
  pretty = false
  warn_redundant_casts = true

[tool.pydantic-mypy]
  init_forbid_extra = true
  init_typed = true
  warn_required_dynamic_aliases = true
  warn_untyped_fields = true

[tool.ruff]
  line-length = 79

[tool.ruff.per-file-ignores]
  "bmp/__init__.py" = ["E402"]
